install.packages(c(
"choroplethr",
"data.table",
"dplyr",
"flexdashboard",
"forecast",
"foreign",
"gcc",
"ggbeeswarm",
"ggmap",
"ggplot2",
"ggvis",
"googlesheets",
"googleVis",
"haven",
"httr",
"janitor",
"jsonlite",
"lubridate",
"maps",
"maptools",
"openxlsx",
"profvis",
"RColorBrewer",
"readr",
"readstata13",
"readxl",
"reshape2",
"RGA",
"rgl",
"rmarkdown",
"RMySQL",
"RODBC",
"RPostgreSQL",
"rvest",
"shiny",
"sp",
"sqldf",
"stringr",
"tibble",
"tidyr",
"tidytext",
"tufte",
"XLConnect",
"xlsx",
"XML",
"xtable",
"xts",
"zoo",
))
install.packages(c(
"choroplethr",
"data.table",
"dplyr",
"flexdashboard",
"forecast",
"foreign",
"gcc",
"ggbeeswarm",
"ggmap",
"ggplot2",
"ggvis",
"googlesheets",
"googleVis",
"haven",
"httr",
"janitor",
"jsonlite",
"lubridate",
"maps",
"maptools",
"openxlsx",
"profvis",
"RColorBrewer",
"readr",
"readstata13",
"readxl",
"reshape2",
"RGA",
"rgl",
"rmarkdown",
"RMySQL",
"RODBC",
"RPostgreSQL",
"rvest",
"shiny",
"sp",
"sqldf",
"stringr",
"tibble",
"tidyr",
"tidytext",
"tufte",
"XLConnect",
"xlsx",
"XML",
"xtable",
"xts",
"zoo"
))
install.packages("devtools")
devtools::install_github(‘rstudio/blogdown’)
devtools::install_github(rstudio/blogdown)
devtools::install_github("rstudio/blogdown")
install.packages("formatR")
library(blogdown)
install_hugo()
new_site()
install.packages("tm")
install.packages(c("curl", "dplyr", "foreign", "glue", "httpuv", "rgdal", "sp"))
install.packages("Rtools")
install.packages("waffle")
library(waffle)
savings <- c(`Mortgage ($84,911)`=84911, `Auto andntuition loans ($14,414)`=14414,
`Home equity loans ($10,062)`=10062, `Credit Cards ($8,565)`=8565)
waffle(savings/392, rows=7, size=0.5,
colors=c("#c7d4b6", "#a3aabd", "#a0d0de", "#97b5cf"),
title="Average Household Savings Each Year",
xlab="1 square == $392")
library(waffle)
savings <- c(`Mortgage ($84,911)`=84911, `Auto andntuition loans ($14,414)`=14414,
`Home equity loans ($10,062)`=10062, `Credit Cards ($8,565)`=8565)
waffle(savings/392, rows=7, size=0.5,
colors=c("#c7d4b6", "#a3aabd", "#a0d0de", "#97b5cf"),
title="Average Household Savings Each Year",
xlab="1 square == $392")
devtools::install_github("dkahle/ggmap")
install.packages("maps")
devtools::install_github("dkahle/ggmap")
devtools::install_github("hadley/ggplot2")
devtools::install_github("hadley/ggplot2")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
install.packages("purrr")
install.packages("deldir")
df_subways_bxl <- read.csv("./output/subways_bxl.csv", header=TRUE, sep=",")
setwd("C:/Users/colpaeko/OneDrive/Vault/Vlaamse Overheid/Projecten/R Projects/subway-brussels")
df_subways_bxl <- read.csv("./output/subways_bxl.csv", header=TRUE, sep=",")
View(df_subways_bxl)
data_deldir = data %>%
nest(-city, .key = location_info) %>%
mutate(deldir = map(location_info, function(df) deldir(df$lon, df$lat))) %>%
mutate(del.area = map(deldir, "del.area")) %>%
mutate(delsgs = map(deldir, "delsgs")) %>%
mutate(summary = map(deldir, "summary"))
data_deldir
library(purrr)
library(deldir)
data_deldir = data %>%
nest(-city, .key = location_info) %>%
mutate(deldir = map(location_info, function(df) deldir(df$lon, df$lat))) %>%
mutate(del.area = map(deldir, "del.area")) %>%
mutate(delsgs = map(deldir, "delsgs")) %>%
mutate(summary = map(deldir, "summary"))
data_deldirdata_deldir = data %>%
nest(-city, .key = location_info) %>%
mutate(deldir = map(location_info, function(df) deldir(df$lon, df$lat))) %>%
mutate(del.area = map(deldir, "del.area")) %>%
mutate(delsgs = map(deldir, "delsgs")) %>%
mutate(summary = map(deldir, "summary"))
data_deldir
data_deldir = df_subways_bxl %>%
nest(-city, .key = location_info) %>%
mutate(deldir = map(location_info, function(df) deldir(df$lon, df$lat))) %>%
mutate(del.area = map(deldir, "del.area")) %>%
mutate(delsgs = map(deldir, "delsgs")) %>%
mutate(summary = map(deldir, "summary"))
data_deldir
data_deldir_delsgs = data_deldir %>%
select(city, delsgs) %>%
unnest()
head(data_deldir_delsgs)
data_deldir_cent = data_deldir %>%
select(city, summary) %>%
unnest() %>%
group_by(city) %>%
summarise(cent_x = sum(x * del.wts),
cent_y = sum(y * del.wts)) %>%
ungroup()
data_deldir_cent
del_plot = function(city_name, city_map){
ggmap(city_map, extent = "device") +
geom_segment(data = subset(data_deldir_delsgs, city == city_name), aes(x = x1, y = y1, xend = x2, yend = y2),
size = 1, color= "#92c5de") +
geom_point(data = subset(data, city == city_name), aes(x = lon, y = lat),
color = "#0571b0", size = 3) +
geom_point(data = subset(data_deldir_cent, city == city_name),
aes(x = cent_x, y = cent_y),
size = 6, color= "#ca0020")
}
brussels_del.plot = del_plot("Brussels", brussels_map)
city_plot = function(city, city_map){
ggmap(city_map, extent = "device") +
geom_point(data = subset(df_subways_bxl, city == city), aes(x = lon, y = lat),
color = "#0571b0", size = 3)
}
brussels.plot = city_plot("Brussels", brussels_map)
brussels_map = get_googlemap(center = "Brussels", maptype = "roadmap", zoom = 11, size = c(640, 420), color = "bw")
brussels_del.plot = del_plot("Brussels", brussels_map)
city_plot = function(city, city_map){
ggmap(city_map, extent = "device") +
geom_point(data = subset(df_subways_bxl, city == city), aes(x = lon, y = lat),
color = "#0571b0", size = 3)
}
brussels_del.plot = del_plot("Brussels", brussels_map)
brussels.plot = city_plot("Brussels", brussels_map)
brussels.plot
brussels_del.plot = del_plot("Brussels", brussels_map)
del_plot = function(city_name, city_map){
ggmap(city_map, extent = "device") +
geom_segment(data = subset(data_deldir_delsgs, city == city_name), aes(x = x1, y = y1, xend = x2, yend = y2),
size = 1, color= "#92c5de") +
geom_point(data = subset(data, city == city_name), aes(x = lon, y = lat),
color = "#0571b0", size = 3) +
geom_point(data = subset(data_deldir_cent, city == city_name),
aes(x = cent_x, y = cent_y),
size = 6, color= "#ca0020")
}
brussels_del.plot = del_plot("Brussels", brussels_map)
View(df_subways_bxl)
data_deldir = df_subways_bxl %>%
nest(-city, .key = location_info) %>%
mutate(deldir = map(location_info, function(df) deldir(df$lon, df$lat))) %>%
mutate(del.area = map(deldir, "del.area")) %>%
mutate(delsgs = map(deldir, "delsgs")) %>%
mutate(summary = map(deldir, "summary"))
data_deldir
data_deldir_delsgs = data_deldir %>%
select(city, delsgs) %>%
unnest()
head(data_deldir_delsgs)
data_deldir_cent = data_deldir %>%
select(city, summary) %>%
unnest() %>%
group_by(city) %>%
summarise(cent_x = sum(x * del.wts),
cent_y = sum(y * del.wts)) %>%
ungroup()
data_deldir_cent
del_plot = function(city_name, city_map){
ggmap(city_map, extent = "device") +
geom_segment(data = subset(data_deldir_delsgs, city == city_name), aes(x = x1, y = y1, xend = x2, yend = y2),
size = 1, color= "#92c5de") +
geom_point(data = subset(data, city == city_name), aes(x = lon, y = lat),
color = "#0571b0", size = 3) +
geom_point(data = subset(data_deldir_cent, city == city_name),
aes(x = cent_x, y = cent_y),
size = 6, color= "#ca0020")
}
brussels_del.plot = del_plot("Brussels", brussels_map)
View(del_plot)
del_plot = function(city_name, city_map){
ggmap(city_map, extent = "device") +
geom_segment(data = subset(data_deldir_delsgs, city == city), aes(x = x1, y = y1, xend = x2, yend = y2),
size = 1, color= "#92c5de") +
geom_point(data = subset(data, city == city_name), aes(x = lon, y = lat),
color = "#0571b0", size = 3) +
geom_point(data = subset(data_deldir_cent, city == city_name),
aes(x = cent_x, y = cent_y),
size = 6, color= "#ca0020")
}
brussels_del.plot = del_plot("Brussels", brussels_map)
View(data_deldir_delsgs)
del_plot = function(city_name, city_map){
ggmap(city_map, extent = "device") +
geom_segment(data = subset(data_deldir_delsgs, city == city_name), aes(x = x1, y = y1, xend = x2, yend = y2),
size = 1, color= "#92c5de") +
geom_point(data = subset(df_bxlsubs, city == city_name), aes(x = lon, y = lat),
color = "#0571b0", size = 3) +
geom_point(data = subset(data_deldir_cent, city == city_name),
aes(x = cent_x, y = cent_y),
size = 6, color= "#ca0020")
}
brussels_del.plot = del_plot("Brussels", brussels_map)
del_plot = function(city_name, city_map){
ggmap(city_map, extent = "device") +
geom_segment(data = subset(data_deldir_delsgs, city == city_name), aes(x = x1, y = y1, xend = x2, yend = y2),
size = 1, color= "#92c5de") +
geom_point(data = subset(df_subways_bxl, city == city_name), aes(x = lon, y = lat),
color = "#0571b0", size = 3) +
geom_point(data = subset(data_deldir_cent, city == city_name),
aes(x = cent_x, y = cent_y),
size = 6, color= "#ca0020")
}
brussels_del.plot = del_plot("Brussels", brussels_map)
brussels_del.plot
install.packages("cowplot")
library(cowplot)
time_deldir_delsgs = data.frame()
time_deldir_sum = data.frame()
for(c in c("Brussels")) {
data_city = filter(data, city == c)
for(year in min(data_city$opened_year):2015) {
data_year = filter(data_city, opened_year <= year)
# Add condition to skip if number of stops less than 3
if(dim(data_year)[1] < 3) next
year_deldir = deldir(data_year$lon, data_year$lat)
year_deldir_delsgs = year_deldir$delsgs %>%
mutate(city = c) %>%
mutate(opened_year = year)
time_deldir_delsgs = bind_rows(time_deldir_delsgs, year_deldir_delsgs)
year_deldir_sum = year_deldir$summary %>%
mutate(city = c) %>%
mutate(opened_year = year)
time_deldir_sum = bind_rows(time_deldir_sum, year_deldir_sum)
}
}
for(c in c("Brussels")) {
data_city = filter(data, city == c)
for(year in min(data_city$opened_year):2015) {
data_year = filter(data_city, opened_year <= year)
if(dim(data_year)[1] < 3) next
year_deldir = deldir(data_year$lon, data_year$lat)
year_deldir_delsgs = year_deldir$delsgs %>%
mutate(city = c) %>%
mutate(opened_year = year)
time_deldir_delsgs = bind_rows(time_deldir_delsgs, year_deldir_delsgs)
year_deldir_sum = year_deldir$summary %>%
mutate(city = c) %>%
mutate(opened_year = year)
time_deldir_sum = bind_rows(time_deldir_sum, year_deldir_sum)
}
}
for(c in c("Brussels")) {
data_city = filter(data, city == c)
for(year in min(data_city$opened_year):2015) {
data_year = filter(data_city, opened_year <= year)
year_deldir = deldir(data_year$lon, data_year$lat)
year_deldir_delsgs = year_deldir$delsgs %>%
mutate(city = c) %>%
mutate(opened_year = year)
time_deldir_delsgs = bind_rows(time_deldir_delsgs, year_deldir_delsgs)
year_deldir_sum = year_deldir$summary %>%
mutate(city = c) %>%
mutate(opened_year = year)
time_deldir_sum = bind_rows(time_deldir_sum, year_deldir_sum)
}
}
